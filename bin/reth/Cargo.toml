[package]
name = "reth"
version = "0.1.0"
edition.workspace = true
rust-version.workspace = true
license.workspace = true
homepage.workspace = true
repository.workspace = true

[dependencies]
# reth
reth-config = { path = "../../crates/config" }
reth-primitives = { workspace = true, features = ["arbitrary"] }
reth-db = { path = "../../crates/storage/db", features = ["mdbx", "test-utils"] }
# TODO: Temporary use of the test-utils feature
reth-provider = { workspace = true, features = ["test-utils"] }
reth-revm = { path = "../../crates/revm" }
reth-revm-inspectors = { path = "../../crates/revm/revm-inspectors" }
reth-staged-sync = { path = "../../crates/staged-sync" }
reth-stages = { path = "../../crates/stages" }
reth-interfaces = { workspace = true, features = ["test-utils"] }
reth-transaction-pool = { workspace = true }
reth-beacon-consensus = { path = "../../crates/consensus/beacon" }
reth-auto-seal-consensus = { path = "../../crates/consensus/auto-seal" }
reth-blockchain-tree = { path = "../../crates/blockchain-tree" }
reth-rpc-engine-api = { path = "../../crates/rpc/rpc-engine-api" }
reth-rpc-builder = { path = "../../crates/rpc/rpc-builder" }
reth-rpc = { path = "../../crates/rpc/rpc" }
reth-rlp = { workspace = true }
reth-network = { path = "../../crates/net/network", features = ["serde"] }
reth-network-api = { workspace = true }
reth-downloaders = { path = "../../crates/net/downloaders", features = ["test-utils"] }
reth-tracing = { path = "../../crates/tracing" }
reth-tasks = { workspace = true }
reth-net-nat = { path = "../../crates/net/nat" }
reth-payload-builder = { workspace = true }
reth-basic-payload-builder = { path = "../../crates/payload/basic" }
reth-discv4 = { path = "../../crates/net/discv4" }
reth-metrics = { workspace = true }
jemallocator = { version = "0.5.0", optional = true }

# crypto
secp256k1 = { workspace = true, features = ["global-context", "rand-std", "recovery"] }

# tracing
tracing = { workspace = true }

# io
fdlimit = "0.2.1"
serde = { workspace = true }
serde_json = { workspace = true }
shellexpand = "3.0.0"
dirs-next = "2.0.0"
confy = "0.5"
toml = { version = "0.7", features = ["display"] }

# metrics
metrics-exporter-prometheus = "0.11.0"
metrics-util = "0.14.0"

# test vectors generation
proptest = "1.0"

# tui
comfy-table = "6.1.4"
crossterm = "0.25.0"
tui = "0.19.0"
human_bytes = "0.4.1"

# async
tokio = { workspace = true, features = ["sync", "macros", "time", "rt-multi-thread"] }
futures = { workspace = true }
pin-project = { workspace = true }

# http/rpc
hyper = "0.14.25"

# misc
eyre = "0.6.8"
clap = { version = "4", features = ["derive"] }
tempfile = { version = "3.3.0" }
backon = "0.4"
hex = "0.4"
thiserror = { workspace = true }
pretty_assertions = "1.3.0"
humantime = "2.1.0"

[features]
jemalloc = ["dep:jemallocator"]
only-info-logs = ["tracing/release_max_level_info"]

[build-dependencies]
vergen = { version = "8.0.0", features = ["build", "cargo", "git", "gitcl"] }
