on:
  push:
    branches:
      - main
  pull_request:
  merge_group:

env:
  RUSTFLAGS: -D warnings
  CARGO_TERM_COLOR: always
  GETH_BUILD: 1.12.0-e501b3b0

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

name: integration
jobs:
  test:
    name: test (partition ${{ matrix.partition }}/${{ strategy.job-total }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        partition: [1, 2]
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3
      - name: Install toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          components: llvm-tools-preview
      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Install geth
        run: |
          mkdir -p "$HOME/bin"
          wget -q https://gethstore.blob.core.windows.net/builds/geth-linux-amd64-$GETH_BUILD.tar.gz
          tar -xvf geth-linux-amd64-$GETH_BUILD.tar.gz
          mv geth-linux-amd64-$GETH_BUILD/geth $HOME/bin/geth
          chmod u+x "$HOME/bin/geth"
          export PATH=$HOME/bin:$PATH
          echo $HOME/bin >> $GITHUB_PATH
          geth version

      - name: Install latest nextest release
        uses: taiki-e/install-action@nextest
      - name: Install cargo-llvm-cov
        uses: taiki-e/install-action@cargo-llvm-cov

      - name: Run tests
        run: |
          cargo llvm-cov nextest --lcov --output-path lcov.info \
            --locked --workspace --all-features \
            --partition hash:${{ matrix.partition }}/${{ strategy.job-total }} \
            -E 'kind(test)'

      - name: Upload coverage data to codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          flags: integration-tests

  sync:
    name: sync / 100k blocks
    runs-on: ubuntu-latest
    env:
      RUST_LOG: info,sync=error
    steps:
      - name: Checkout sources
        uses: actions/checkout@v3

      - name: Install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true

      - name: Run sync (${{ matrix.profile }})
        run: |
          cargo run --profile release --features jemalloc,only-info-logs \
            --bin reth -- node \
            --debug.tip 0x91c90676cab257a59cd956d7cb0bceb9b1a71d79755c23c7277a0697ccfaf8c4 \
            --debug.max-block 100000 \
            --debug.terminate

  integration-success:
    if: always()
    name: integration success
    runs-on: ubuntu-latest
    needs: [test, sync]
    steps:
      - name: Decide whether the needed jobs succeeded or failed
        uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}